24.10.30.
  - 로그인 UI 디자인
  - 로그인/아웃/가입/탈퇴 설계
  - 개발 문서 작성
  - git Repository 연결

24.10.31.
  - UI 구현: 로그인, 회원가입
  - 입력, 입력 오류 구현

24.11.1.
  - Error, npm unable to resolve dependency tree
    -> npm install --verbose, 에러 확인 가능
      : upstream dependency 원인
    -> "npm i [모듈]", --force or --legacy-peer-deps 추가
      : incorrect (and potentially broken) dependency 포함 선언 의미
  - 유닛 테스트코드 작성
  - 회원가입 오류 조건 추가
  
24.11.2.
  - Error, Nextjs, 커스텀 서버는 vercel 배포 안됨
    -> 최적화를 위해 Nextjs 자체 서버 사용, 커스텀 서버는 최적화 사용할 수 없음 
  - Error, action 외 데이터 fetch 전송 후 request.body 빈 값일 경우
    -> body: JSON.stringfy(), header: { 'content-type': 'application/json' } 설정
  - Error, Cannot set headers after they are sent to the client
    -> 반응을 한 번 이상 보낼 때 발생, response.send() 반환 확인
  - Errpr, dotenv 값 불러올 때 undefined 
    -> import dotenv from "dotenv"; dotenv.config(); 설정
  - 서버 구축 중
    form 데이터 값 받음, redis 설정 중
    https://redis.io/docs/latest/develop/connect/clients/nodejs/#connect

24.11.3.
  - Redis, 연결
    : id: sessionID 형식으로 서버 메모리 저장, 클라이언트는 두 개의 값을 쿠키로 보관
    클라이언트 고유 식별, 관리 효율 장점 
    Redis APIs Link: https://redis.io/docs/latest/commands/?group=generic
  - Firebase, 연결
    : users/${userInfo} 형식으로 유저 데이터 보관 
  - 로그인/로그아웃
    - 쿠키 활용
      : 서버에서 쿠키를 전달, "httpOnly: true" document.cookie 접근 불가, 서버의 req, res로 클라이언트 쿠키 접근 가능, 쿠키 유효시간 중요
      인증 성공여부 반환 text 간단 설정, 200으로 처리
    - 로그인
      : 서버, ID, PWD 에러 처리, 성공 쿠키 반환

24.11.4.
  - useContext, Redux 마이그레이션
    : 에러 상태 관리 변경, useContext 렌더링 비용 발생
  - Error, A non-serializable value was detected in an action, in the path
    : 비직렬화 오류, 이벤트 객체 자체를 전달하지 않고 필요한 값만 추출하여 payload 전달 
  - 로그인 에러처리 유형
      1. 항목 빈 형식: 개별, 전체
      2. 개별 항목 공백/문자형식 
      3. 항목 수정 시 다음 오류 상속  
      4. DB 연동, ID/PWD 존재 여부
      6. 서버 에러 
  - 회원가입 에러처리 유형
      1. 항목 빈 형식: 개별, 전체
      2. 개별 항목 공백/문자형식/길이 
      3. 항목 수정 시 다음 오류 상속 

24.11.5.
  - 로그인 에러처리 유형 추가
      1. PWD 불일치 오류, 제출 이후 ID 변경하면 PWD 에러 초기화
  - 회원가입 에러처리 유형 추가
      1. ID 중복 확인, 하지 않으면 제출 불가
  - 회원가입 정보, DB 삽입
  - 제출 버튼 상태 변화 
    :  redux 비동기 활용, 연속 클릭 방지, 딜레이 부여, fetch 처리 상태따라 버튼 value 변화
  - 제출 버튼 제한 유형
      1. 항목 빈 형식 제출 제한: 개별, 전체
      2. 개별 항목 에러 여부 제출 제한
      3. 제출 이후 제출 클릭 제한
      4. 회원가입, 제출 이후 ID 검사 클릭 제한
      5. 회원가입, 제출 이후 제출 클릭, 항목 수정 불가
      6. 로그인, 제출 이후 항목 수정 다시 제출 클릭 가능

24.11.7.
  - 제출 예외사항 추가
      1. id 중복 검사 후 id 수정 시 id 중복 재검사 적용
  - 로그인 이후 유저 페이지로 이동
  - 미들웨어 설정
    : 비정상 접근 제한, 보유한 쿠키 세션ID 검증
  - Error, 서버 컴포넌트에서 fetch 사용 시 쿠키 전달 오류
    -> [Object: null prototype] {}, fetch header 쿠키 직접 설정하여 전달,
    브라우저와 분리된 환경으로 서버에서 실행되는 fetch는 브라우저 쿠키를 포함할 수 없음 
  - Form 전환 버튼 제한 유형
      1. 제출되고 있을 동안 연속 클릭 금지
      2. 클릭 후 버튼 상태 초기화
  - 로그인 이동, 회원가입, 보완
  - 로그아웃, 회원탈퇴 버튼 기능 구현
    : Redis, Firebase 연동, 스타일링 제외

<-- 애니메이션 적용  -->