24.10.30.
  - 로그인 UI 디자인
  - 로그인/아웃/가입/탈퇴 설계
  - 개발 문서 작성
  - git Repository 연결

24.10.31.
  - UI 구현: 로그인, 회원가입
  - 입력, 입력 오류 구현

24.11.1.
  - Error, npm unable to resolve dependency tree
    -> npm install --verbose, 에러 확인 가능
      : upstream dependency 원인
    -> "npm i [모듈]", --force or --legacy-peer-deps 추가
      : incorrect (and potentially broken) dependency 포함 선언 의미
  - 유닛 테스트코드 작성
  - 회원가입 오류 조건 추가
  
24.11.2.
  - Error, Nextjs, 커스텀 서버는 vercel 배포 안됨
    -> 최적화를 위해 Nextjs 자체 서버 사용, 커스텀 서버는 최적화 사용할 수 없음 
  - Error, action 외 데이터 fetch 전송 후 request.body 빈 값일 경우
    -> body: JSON.stringfy(), header: { 'content-type': 'application/json' } 설정
  - Error, Cannot set headers after they are sent to the client
    -> 반응을 한 번 이상 보낼 때 발생, response.send() 반환 확인
  - Errpr, dotenv 값 불러올 때 undefined 
    -> import dotenv from "dotenv"; dotenv.config(); 설정
  - 서버 구축 중
    form 데이터 값 받음, redis 설정 중
    https://redis.io/docs/latest/develop/connect/clients/nodejs/#connect

24.11.3.
  - Redis, 연결
    : id: sessionID 형식으로 서버 메모리 저장, 클라이언트는 두 개의 값을 쿠키로 보관
    클라이언트 고유 식별, 관리 효율 장점 
    APIs Link: https://redis.io/docs/latest/commands/?group=generic
  - Firebase, 연결
    : users/${userInfo} 형식으로 유저 데이터 보관 
  - 로그인/로그아웃
    - 쿠키 활용
      : 서버에서 쿠키를 전달, "httpOnly: true" document.cookie 접근 불가, 서버의 req, res로 클라이언트 쿠키 접근 가능, 쿠키 유효시간 중요
      인증 성공여부 반환 text 간단 설정, 200으로 처리
    - 로그인
      : 서버, ID, PWD 에러 처리, 성공 쿠키 반환

<-- 로그아웃 구현, 에러 처리 -->